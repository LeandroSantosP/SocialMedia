// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id       Int     @id @default(autoincrement())
  name     String
  password String
  email    String  @unique
  bio      String?
  IsAdmin  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts    Post[]
  Comments Comment[]

  @@map("clients")
}

model Post {
  id                String              @id @default(uuid())
  title             String              @unique
  visible           Boolean
  content           String?
  IsPublished       Boolean             @default(false)
  IsActive          Boolean             @default(true)
  created_at        DateTime            @default(now())
  updated_At        DateTime            @updatedAt
  CategoriesOnPosts CategoriesOnPosts[]

  author   Client    @relation(fields: [authorId], references: [id])
  authorId Int       @default(autoincrement())
  comments Comment[]

  @@map("posts")
}

model Comment {
  id         String @id @default(uuid())
  authorName String
  comment    String

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  author   Client @relation(fields: [authorId], references: [id])
  authorId Int

  created_at DateTime @default(now())
  updated_At DateTime @updatedAt

  @@map("comments")
}

model Category {
  id                String              @id @default(uuid())
  name              String              @unique
  description       String?
  slug              String              @unique
  created_at        DateTime            @default(now())
  updated_At        DateTime            @updatedAt
  CategoriesOnPosts CategoriesOnPosts[]

  @@map("categories")
}

model CategoriesOnPosts {
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@id([postId, categoryId])
}
